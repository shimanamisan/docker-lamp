# Compose fileのバージョン指定
version: '3.8'

# 立ち上げるコンテナを記述していく
services:
  # ApacheとPHPが動作するコンテナ
  web:
    # コンテナ名を指定する
    container_name: web
    # 作成したDockerfileを利用してコンテナをビルドする
    build: ./docker
    # ポートのマッピングを設定する
    # 下記の記述だと、localhost:8080とブラウザから指定すると、Apacheの80番ポートに接続される
    ports:
      - 8000:80
    # コンテナとホスト側のディレクトリを同期させる設定
    # Laravelのソースが入る箇所
    volumes:
      - ./htdocs:/var/www/html

  # MySQLを動かすコンテナ
  db:
    # DockerHubから現在最新のMySQLの公式イメージをダウンロードしてくる
    image: mysql
    # コンテナ名を指定
    container_name: db-host
    # コンテナ内の環境変数を指定。詳細はDockerHubを確認
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: docker-database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/db/init:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=db-host
      - PMA_USER=root
      - PMA_PASSWORD=root
    ports:
      - 8080:80