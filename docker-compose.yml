# Compose fileのバージョン指定
version: "3.8"

# 立ち上げるコンテナを記述していく
services:
  nginx-proxy:
    container_name: nginx-proxy-container
    build: ./docker/nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  # ApacheとPHPが動作するコンテナ
  web:
    # コンテナ名を指定する
    container_name: web-container
    # 作成したDockerfileを利用してコンテナをビルドする
    build: ./docker/web
    # ポートのマッピングを設定する
    # 下記の記述だと、localhost:8081とブラウザから指定すると、Apacheの80番ポートに接続される
    ports:
      - 8081:80
    # コンテナとホスト側のディレクトリを同期させる設定
    volumes:
      # Laravelのソースが入る箇所を同期
      - ./htdocs:/var/www/html

  # MySQLを動かすコンテナ
  database:
    # コンテナ名を指定
    container_name: db-container
    build: ./docker/mysql
    volumes:
      # ボリュームにマウントしデータを永続化する
      - db-store:/var/lib/mysql
    ports:
      - 3306:3306

  # PHPMyadminを動かすコンテナ
  phpmyadmin:
    # コンテナ名を指定
    container_name: phpmyadmin-container
    build: ./docker/phpMyAdmin
    ports:
      - 8082:80
    # 依存関係をMySQLに設定
    depends_on:
      - database

  # mailhogのコンテナ
  mailhog:
    # コンテナ名を指定
    container_name: mailhog-container
    build: ./docker/mailhog
    ports:
      # 管理画面に接続するポート（違うポート番号にすると管理画面に接続できない）
      - 8025:8025

# 使用するボリュームを指定
volumes:
  db-store:
