# Compose fileのバージョン指定
version: "3.8"

# 立ち上げるコンテナを記述していく
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  # ApacheとPHPが動作するコンテナ
  web:
    # コンテナ名を指定する
    container_name: container_web
    # 作成したDockerfileを利用してコンテナをビルドする
    build: ./docker
    # ポートのマッピングを設定する
    # 下記の記述だと、localhost:8081とブラウザから指定すると、Apacheの80番ポートに接続される
    ports:
      - 8081:80
    # コンテナとホスト側のディレクトリを同期させる設定
    volumes:
      # Laravelのソースが入る箇所
      - ./htdocs:/var/www/html
      # apacheの設定ファイルが入っているディレクトリを同期
      - ./docker/apache:/etc/apache2/sites-available
    environment:
      - VIRTUAL_HOST=test.example.com

  # MySQLを動かすコンテナ
  database:
    # DockerHubから現在最新のMySQLの公式イメージをダウンロードしてくる
    image: mysql
    # コンテナ名を指定
    container_name: container_db
    restart: always
    # コンテナ内の環境変数を指定。詳細はDockerHubを確認
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: docker-database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: "Asia/Tokyo"
    # 起動時に実行するコマンド
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      # ホスト側のディレクトリ・ファイルをコンテナ側と同期させる
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/db/init:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  # PHPMyadminを動かすコンテナ
  phpmyadmin:
    container_name: container_phpmyadmin
    restart: always
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=database
      - PMA_USER=root
      - PMA_PASSWORD=root
    ports:
      - 8082:80
    # 依存関係をMySQLに設定
    depends_on:
      - database

  # mailhogのコンテナ
  mailhog:
    container_name: container_mailhog
    image: mailhog/mailhog
    ports:
      # 管理画面に接続するポート（違うポート番号にすると管理画面に接続できない）
      - 8025:8025
